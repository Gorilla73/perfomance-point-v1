"""
Django settings for PerfomancePoint project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from datetime import timedelta
from pathlib import Path

import certifi
from celery import Celery
from celery.schedules import crontab

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-==%!52rznidavt+b#zpxqlv!d48#o0p17s*2dbq4ao^^f$kw60'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'ParserFlashScore',
    'parserTableTennis',
    'user_api.apps.UserApiConfig',

    'django_celery_beat',
    'celery',
    'rest_framework',
    'corsheaders',


]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ]
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',

    'corsheaders.middleware.CorsMiddleware',

    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'django.middleware.common.CommonMiddleware',

]

ROOT_URLCONF = 'PerfomancePoint.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'PerfomancePoint.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Основной url для управления медиафайлами
MEDIA_URL = '/media/'

# Путь хранения картинок
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Поскольку Django и React - разные источники, ставим Lax
CSRF_COOKIE_SAMESITE = 'Lax'
SESSION_COOKIE_SAMESITE = 'Lax'

CSRF_COOKIE_HTTPONLY = True
SESSION_COOKIE_HTTPONLY = True

CSRF_TRUSTED_ORIGINS = ["http://localhost:3000/*",
                        "http://127.0.0.1:3000/*"]

# Когда приложение заимеет production окружение и https соединение
#CSRF_COOKIE_SECURE = True
#SESSION_COOKIE_SECURE = True

# CORS_ALLOW_ALL_ORIGINS = True

# Разрешаем межсайтовые запросы для домена, на котором находится React приложение
CORS_ALLOWED_ORIGINS = [
  'http://localhost:3000',
  'http://127.0.0.1:3000',
]

# Разрешаем межсайтовые запросы для домена, на котором находится React приложение
#
# Разрешаем заголовки для межсайтовых запросов
CORS_EXPOSE_HEADERS = ['Content-Type', 'X-CSRFToken', 'Authorizations']
CORS_ALLOW_CREDENTIALS = True  # Разрешить передачу куки

CORS_ORIGIN_ALLOW_ALL = True  # Разрешить доступ со всех доменов. Можно установить False и указать конкретные домены в CORS_ORIGIN_WHITELIST.
#
#
# # Установите настройки SESSION_COOKIE_SECURE и CSRF_COOKIE_SECURE в True,
# # чтобы куки были доступны только через HTTPS.
# SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # или 'django.contrib.sessions.backends.cache', в зависимости от ваших предпочтений
# SESSION_COOKIE_SECURE = True
# CSRF_COOKIE_SECURE = True
#
# # Установите настройки SESSION_COOKIE_HTTPONLY и CSRF_COOKIE_HTTPONLY в True,
# # чтобы куки не были доступны для JavaScript.
# SESSION_COOKIE_HTTPONLY = True
# CSRF_COOKIE_HTTPONLY = True

AUTH_USER_MODEL = 'user_api.CustomUser'

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

# # Указываем путь к файлу с корневыми сертификатами
# SSL_CERT_FILE = '/path/to/certificates.pem'
#
# # Проверяем, существует ли файл с корневыми сертификатами
# if os.path.exists(SSL_CERT_FILE):
#     # Устанавливаем путь к файлу в переменной окружения
#     os.environ['SSL_CERT_FILE'] = SSL_CERT_FILE


# Emailing settings


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

EMAIL_HOST = 'smtp.mail.ru'
EMAIL_PORT = 2525
EMAIL_HOST_USER = 'perfomance-point@mail.ru'
EMAIL_HOST_PASSWORD = 'RYKckkSKvq1Pr64vKWKJ'
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False

# EMAIL_SSL_CERTFILE = certifi.where()

SERVER_EMAIL = EMAIL_HOST_USER
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


# EMAIL_HOST = 'smtp.yandex.ru'
# EMAIL_PORT = 465
#
# EMAIL_HOST_USER = 'perfomance-point@yandex.ru'
# EMAIL_HOST_PASSWORD = 'oszhuvzqegumncqc'
#
# EMAIL_USE_TLS = False
# EMAIL_USE_SSL = True
#
# DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
# SERVER_EMAIL = EMAIL_HOST_USER
# EMAIL_ADMIN = EMAIL_HOST_USER


PASSWORD_RESET_TIMEOUT = 14400

# Настройка Celery
app = Celery('PerfomancePoint')
app.config_from_object('django.conf:settings', namespace='CELERY')
app.autodiscover_tasks()

# CELERY_BEAT_SCHEDULE = {
#     'parse-results-at-1am': {
#         'task': 'parserTableTennis.tasks.parse_results',
#         'schedule': crontab(hour='1', minute='0'),
#     },
#     'parse-upcoming-every-30-minutes': {
#         'task': 'parserTableTennis.tasks.parse_upcoming',
#         'schedule': crontab(minute='*/30'),
#     },
# }

CELERY_TIMEZONE = 'UTC'  # или ваш часовой пояс
